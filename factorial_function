######################################################
# [1] Calculate the factorial of non-negative integer N, N!
######################################################
def factorialize_this(input_integer):
    if input_integer == 0:
        return 1
    else:
        return input_integer * factorialize_this(input_integer - 1)

######################################################
##### [2A] Find the combination, binom(n,r)
######################################################
from eulerlib.numtheory import *
top = 10
bottom = 5
print( nCr( top , bottom ) )

######################################################
# [2B] Find the permutation, perm(n,r)
######################################################
from eulerlib.numtheory import *
top = 10
bottom = 5
print( nPr( top , bottom ) )

######################################################
# [3] de Polignac's formula https://en.wikipedia.org/wiki/Legendre%27s_formula
######################################################
import math
def number_of_trailing_zeroes(number_factorial):
    upper_sum = math.floor( math.log(number_factorial, 5) )
    return sum( math.floor( number_factorial / (5 ** k)) for k in range(1, upper_sum +1 ) )
